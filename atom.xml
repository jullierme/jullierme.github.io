<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    
    <title><![CDATA[Jullierme Barros]]></title>
    <link>jullierme.github.io//</link>
    <atom:link href="/atom.xml" rel="self" type="application/rss+xml"/>
    <description><![CDATA[Meu blog sobre angularjs, java e coisas que gosto:)]]></description>
    <pubDate>Thu, 31 Dec 2015 16:12:42 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title><![CDATA[Contextualizar o componente de Toast do Angular Material]]></title>
      <link>jullierme.github.io/Contextualizar-o-componente-de-Toast-do-Angular-Material/</link>
      <guid>jullierme.github.io/Contextualizar-o-componente-de-Toast-do-Angular-Material/</guid>
      <pubDate>Thu, 31 Dec 2015 02:00:00 GMT</pubDate>
      <description>
      <![CDATA[<p>Essa dica é pra quem deseja alterar a cor de fundo do componente de Toast, pois, por padrão, ele possui apenas a cor preta.</p>
<p><img src="https://lh3.googleusercontent.com/-CDp6kaf5ckg/VoQYaMXKJ1I/AAAAAAABT00/dGVlb-V4yB8/s0/registro+salvo+com+sucesso.png" alt="" title="registro salvo com sucesso.png"></p>
<p>A ideia seria contextualizar o componente para exibir mensagens por tipo.</p>
<p>Ex:</p>
<ul>
<li>Verde: Mensagens de operações realizadas com sucesso</li>
<li>Vermelho: Erros de validação</li>
<li>Laranja: Alertas</li>
<li>Azul: Informações gerais</li>
</ul>]]>
      
      </description>
      <content:encoded><![CDATA[<p>Essa dica é pra quem deseja alterar a cor de fundo do componente de Toast, pois, por padrão, ele possui apenas a cor preta.</p>
<p><img src="https://lh3.googleusercontent.com/-CDp6kaf5ckg/VoQYaMXKJ1I/AAAAAAABT00/dGVlb-V4yB8/s0/registro+salvo+com+sucesso.png" alt="" title="registro salvo com sucesso.png"></p>
<p>A ideia seria contextualizar o componente para exibir mensagens por tipo.</p>
<p>Ex:</p>
<ul>
<li>Verde: Mensagens de operações realizadas com sucesso</li>
<li>Vermelho: Erros de validação</li>
<li>Laranja: Alertas</li>
<li>Azul: Informações gerais</li>
</ul>
<a id="more"></a>
<h2 id="Vamos_lá…">Vamos lá…</h2><p>O grande truque é alterar o css para um tema específico:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">--css do theme green</span><br><span class="line">md-toast.md-green-theme .md-toast-content &#123;</span><br><span class="line">  background-color: #62c462;--verde</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">--css do theme red</span><br><span class="line">md-toast.md-red-theme .md-toast-content&#123;</span><br><span class="line">  background-color: #ee5f5b;--vermelho</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">--css do theme orange</span><br><span class="line">md-toast.md-orange-theme .md-toast-content&#123;</span><br><span class="line">  background-color: #fb921a;--laranja</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">--css do theme blue</span><br><span class="line">md-toast.md-blue-theme .md-toast-content&#123;</span><br><span class="line">  background-color: #0088cc;--azul</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>Agora é só acionar o toast, definindo o ‘theme’ da mensagem.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$mdToast.show(</span><br><span class="line">    $mdToast.simple()</span><br><span class="line">        .theme(<span class="string">'green'</span>)<span class="comment">//&lt;-- Segunda parte do truque</span></span><br><span class="line">        .content(<span class="string">'Registro salvo com sucesso'</span>);</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>Resultado:</p>
<p><img src="https://lh3.googleusercontent.com/-uCNoqDvQBm8/VoQYjjVT5SI/AAAAAAABT1A/0zqJP6QxYoM/s0/registro+salvo+com+sucesso+verde.png" alt="" title="registro salvo com sucesso verde.png"></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$mdToast.show(</span><br><span class="line">	$mdToast.simple()</span><br><span class="line">		.theme(<span class="string">'orange'</span>)</span><br><span class="line">		.content(<span class="string">'Atenção, preencha os campos obrigatórios'</span>);</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>Resultado:</p>
<p><img src="https://lh3.googleusercontent.com/-U3cIfhGVEBw/VoQYrND6zQI/AAAAAAABT1M/CUWfnuU3YDE/s0/alerta.png" alt="" title="alerta.png"></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$mdToast.show(</span><br><span class="line">	$mdToast.simple()</span><br><span class="line">		.theme(<span class="string">'red'</span>)</span><br><span class="line">		.content(<span class="string">'Erro a tentar executar a operação XYZ'</span>);</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>Resultado:</p>
<p><img src="https://lh3.googleusercontent.com/-JCyTvGS6Wkc/VoQYwO79nrI/AAAAAAABT1Y/eP7EAtVNREs/s0/erro.png" alt="" title="erro.png"></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$mdToast.show(</span><br><span class="line">	$mdToast.simple()</span><br><span class="line">		.theme(<span class="string">'blue'</span>)</span><br><span class="line">		.content(<span class="string">'Você possui uma nova mensagem'</span>);</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>Resultado:</p>
<p><img src="https://lh3.googleusercontent.com/-Q9mn8iqfBOo/VoQY3bKjShI/AAAAAAABT1w/mbr_NtCaV6k/s0/informacao.png" alt="" title="informacao.png"></p>
<p>Lembrando que sua app pode estar utilizando qualquer outro tema. A propriedade ‘theme’ do toasd irá afetar apenas a mensagem naquele exato momento.</p>
<p>Componente de toast: <a href="https://material.angularjs.org/1.0.1/demo/toast" target="_blank" rel="external">https://material.angularjs.org/1.0.1/demo/toast</a></p>
<p>Versão do angular material utilizada: <strong>v1.0.1</strong></p>
<p>É isso ai, um abraço e até a próxima.</p>
]]></content:encoded>
      <comments>jullierme.github.io/Contextualizar-o-componente-de-Toast-do-Angular-Material/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[Angular KeyCode]]></title>
      <link>jullierme.github.io/Angular-KeyCode/</link>
      <guid>jullierme.github.io/Angular-KeyCode/</guid>
      <pubDate>Sat, 31 Oct 2015 14:16:28 GMT</pubDate>
      <description>
      <![CDATA[<p>Números mágicos nunca mais. Utilize este serviço em AngularJS para verificar o código das teclas do teclado.</p>
<p><a href="http://bower.io/search/?q=angular-keycode"><img src="https://img.shields.io/bower/v/angular-keycode.svg" alt=""></a><br><a href="https://gitter.im/jullierme/angular-keycode?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge"><img src="https://badges.gitter.im/Join%20Chat.svg" alt=""></a></p>
<h1 id="Números_mágicos_nunca_mais_\o/">Números mágicos nunca mais \o/</h1><p>O que é Angular Keycode? É um serviço de códigos de teclado.</p>
<p>Quando você precisar capturar um evento de teclado e verificar qual tecla foi precionada, ao invés de colocar o código das teclas, utilize este serviço.</p>
<p>Por exemplo:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(codigoCapturado === KeyCode.ENTER)&#123;</span><br></pre></td></tr></table></figure>]]>
      
      </description>
      <content:encoded><![CDATA[<p>Números mágicos nunca mais. Utilize este serviço em AngularJS para verificar o código das teclas do teclado.</p>
<p><a href="http://bower.io/search/?q=angular-keycode" target="_blank" rel="external"><img src="https://img.shields.io/bower/v/angular-keycode.svg" alt=""></a><br><a href="https://gitter.im/jullierme/angular-keycode?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge" target="_blank" rel="external"><img src="https://badges.gitter.im/Join%20Chat.svg" alt=""></a></p>
<h1 id="Números_mágicos_nunca_mais_\o/">Números mágicos nunca mais \o/</h1><p>O que é Angular Keycode? É um serviço de códigos de teclado.</p>
<p>Quando você precisar capturar um evento de teclado e verificar qual tecla foi precionada, ao invés de colocar o código das teclas, utilize este serviço.</p>
<p>Por exemplo:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(codigoCapturado === KeyCode.ENTER)&#123;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>Um arquivo bem pequeno. Menos que 2kb minificado :)</p>
<h2 id="Instalação">Instalação</h2><h3 id="bower">bower</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Para instalar a &#250;ltima vers&#227;o&#10;bower install angular-keycode&#10;&#10;&#10;# Para instalar a &#250;ltima vers&#227;o e atualizar o arquivo bower.json&#10;bower install angular-keycode --save</span><br></pre></td></tr></table></figure>
<h2 id="Registrar">Registrar</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">angular.module(<span class="string">'myApp'</span>,[<span class="string">'angular-keycode'</span>]);</span><br></pre></td></tr></table></figure>
<h2 id="Importar_no_seu_html">Importar no seu html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"bower_components/angular-keycode/angular-keycode.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Com_usar?">Com usar?</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="pi">	'use strict'</span>;</span><br><span class="line"></span><br><span class="line">	MyService.$inject = [<span class="string">'KeyCode'</span>];</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">MyService</span>(<span class="params">KeyCode</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> vm = <span class="keyword">this</span>;</span><br><span class="line">		vm.onKeydown = onKeydown;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//errado</span></span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">onKeydown</span>(<span class="params">$event</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">var</span> code = $event.which || $event.keyCode;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>(code === <span class="number">13</span>)&#123;<span class="comment">//magic number detectado</span></span><br><span class="line">				...faça algo</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//correto</span></span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">onKeydown</span>(<span class="params">$event</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">var</span> code = $event.which || $event.keyCode;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>(code === KeyCode.ENTER)&#123;<span class="comment">//muito melhor agora :)</span></span><br><span class="line">				...faça algo</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>
<h2 id="Alguns_exemplos">Alguns exemplos</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">KeyCode.BACKSPACE</span><br><span class="line">KeyCode.TAB</span><br><span class="line">KeyCode.ENTER</span><br><span class="line"></span><br><span class="line">KeyCode.A</span><br><span class="line">KeyCode.B</span><br><span class="line">KeyCode.C</span><br><span class="line"></span><br><span class="line">KeyCode.NUMPAD_8</span><br><span class="line">KeyCode.NUMPAD_9</span><br><span class="line"></span><br><span class="line">KeyCode.F1</span><br><span class="line">KeyCode.F2</span><br><span class="line">KeyCode.F3</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/jullierme/angular-keycode" target="_blank" rel="external">Veja mais aqui…</a></p>
<h2 id="LICENCE">LICENCE</h2><p>MIT (Livre pra vc fazer o que quiser)</p>
<p>Um abraço, até a próxima</p>
]]></content:encoded>
      <comments>jullierme.github.io/Angular-KeyCode/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[Github: Compartilhe seu projeto]]></title>
      <link>jullierme.github.io/Github-Compartilhe-seu-projeto/</link>
      <guid>jullierme.github.io/Github-Compartilhe-seu-projeto/</guid>
      <pubDate>Fri, 14 Aug 2015 03:00:00 GMT</pubDate>
      <description>
      <![CDATA[<p>Neste mini-tutorial, vamos aprender a colocar nosso projeto no github. Também vamos aprender os principais comandos git.</p>
<h3 id="Pra_começar…">Pra começar…</h3><p>Antes de tudo, você precisa criar um repositório no github, na sua conta. É bem simples. Importante: NÃO CRIE O ARQUIVO README. Vamos criar este arquivo pela linha de comando.</p>
<p>Pelo prompt, navegue até a raiz do seu projeto e digite para habilitar o git:<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">git</span> init</span><br></pre></td></tr></table></figure></p>
<p>Agora vamos criar o arquivo <b>.gitignore</b> pela linha de comando: (Se preferir, crie manualmente)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch .gitignore</span><br></pre></td></tr></table></figure>]]>
      
      </description>
      <content:encoded><![CDATA[<p>Neste mini-tutorial, vamos aprender a colocar nosso projeto no github. Também vamos aprender os principais comandos git.</p>
<h3 id="Pra_começar…">Pra começar…</h3><p>Antes de tudo, você precisa criar um repositório no github, na sua conta. É bem simples. Importante: NÃO CRIE O ARQUIVO README. Vamos criar este arquivo pela linha de comando.</p>
<p>Pelo prompt, navegue até a raiz do seu projeto e digite para habilitar o git:<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">git</span> init</span><br></pre></td></tr></table></figure></p>
<p>Agora vamos criar o arquivo <b>.gitignore</b> pela linha de comando: (Se preferir, crie manualmente)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch .gitignore</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>O arquivo <b>.gitignore</b> serve para informarmos as pastas/arquivos do nosso projeto que não serão ‘comitados’.</p>
<p>Por exemplo: se você tem o bower no seu projeto, não vai querer comitar a pasta <b>bower_components</b> nem a pasta <b>node_modules</b>. Para configurar essas pastas, abra o arquivo e informe:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node_modules/&#10;bower_components/</span><br></pre></td></tr></table></figure>
<p>Agora sim vamos criar o arquivo <b>README.md</b> (Se preferir, crie manualmente). Digite o comando:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch README.md</span><br></pre></td></tr></table></figure>
<p>Agora, informe ao git quem é você. Ele precisa dessas informações para fazer o <b>commit</b></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"Seu Nome"</span></span><br><span class="line">git config --global user.email “seuemail@gmail.com”</span><br></pre></td></tr></table></figure>
<p>Para verificar as pastas observadas pelo git, digite:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
<p>Os arquivos de verde estão ‘na fila’ para serem ‘comitados’. Os de vermelho foram alterados mas não foram ‘adicionados na fila’.</p>
<p>Como estamos configurando o git agora, todos os arquivos precisam ser adicionados na fila para serem comitados. Para isso, digite:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<p>Agora vamos informar ao git da nossa máquina, qual é nosso repositório remoto.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/usuario/nome-projeto.git</span><br></pre></td></tr></table></figure>
<p>Ok, agora vamos fazer nosso primeiro commit.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m “comentário <span class="keyword">do</span> seu comit”</span><br></pre></td></tr></table></figure>
<p>Lembrando que, o comando <b>commit</b> envia os arquivos para um no repositório local (INDEX) que está na nossa máquina. Estes ainda não foram para o servidor remoto. Podemos fazer diversos ‘commits’ antes de enviar tudo para o repositório remoto (HEAD)</p>
<p>Para enviar todos os nossos commits para o servidor remoto, digite:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>Se houve alterações no projeto, seu push será rejeitado. É necessário atualizar o projeto local antes de enviar as novas modificações.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin</span><br></pre></td></tr></table></figure>
<p>Atualizar o repositório local antes de enviar é uma boa prática a ser seguida para quem usa svn ou cvs e é obrigatória no git.</p>
<p>Imagine o seguinte cenário. Você chega no trabalho e manhã e a primeira coisa que precisa fazer é baixar as atualizações do projeto feitas pela equipe.</p>
<p>Para isso, basta fazer um <b>pull</b></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure>
<p>Esse comando simplesmente ‘puxa’ todos os arquivos alterados (commits de outros desenvolvedores) para seu projeto.</p>
<p>Durante o desenvolvimento, você basicamente irá utilizar os comandos:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<p>O <b>.</b> diz que o git deve adicionar todos os arquivos alterados ‘na fila’ para o próximo commit</p>
<p>Continuando…</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
<p>O comando <b>git status</b> sempre vai te mostrar se tem algo para adicionar na fila para ser ‘comitado’ e se não tiver, vai te mostrar quantos commits precisam ser enviados para o repositório remoto (head).</p>
<p>e por ai vai…</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git commit -m “comentário <span class="keyword">do</span> seu comit”</span><br><span class="line">git push -u origin master</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure>
<h2 id="Clonar_um_repositório_existente">Clonar um repositório existente</h2><p>Se o repositório já existe, você vai precisar baixar o projeto completamente antes de começar a trabalhar nele…</p>
<p>Pra isso, será necessário fazer um <b>git clone</b>.</p>
<p>Primeiro, navegue até a pasta raiz onde vai ficar seu projeto</p>
<p>Ex: workspace</p>
<p>Dentro da pasta, digite:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/usuario/nome-projeto.git</span><br></pre></td></tr></table></figure>
<p>Neste caso, será criada uma pasta chamada seuProjeto dentro de workspace com todos os arquivos do projeto.</p>
<h2 id="Registrar_no_bower">Registrar no bower</h2><p>Registre seu projeto para que outras pessoas possam instalar</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bower register nome-projeto git://github.com/usuario/nome-projeto.git</span><br></pre></td></tr></table></figure>
<p>Para verificar informações do registro, digite:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bower info nome-projeto</span><br></pre></td></tr></table></figure>
<p>Agora qualquer pessoa pode instalar seu projeto pelo comando:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bower install nome-projeto</span><br></pre></td></tr></table></figure>
<h2 id="Criar_uma_tag">Criar uma tag</h2><p>Mas qual versão será instalada quando alguém digitar o comando acima? Você precisa criar uma tag sempre que precisar gerar uma versão do seu projeto.</p>
<h4 id="Ex:_1-0-0,_1-0-1_etc…">Ex: 1.0.0, 1.0.1 etc…</h4><p>Quando seu projeto for instalado pelo comando <b>bower install</b>, sempre virá a última versão do projeto.</p>
<p>Para criar uma tag, digite:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag <span class="operator">-a</span> v1.<span class="number">0.0</span> -m <span class="string">"primeira versao"</span></span><br></pre></td></tr></table></figure>
<p>Depois é só fazer um <b>push</b> da tag para que ela seja criada remotamente:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin v1.<span class="number">0.0</span></span><br></pre></td></tr></table></figure>
<h3 id="Regra_para_criação_da_tag">Regra para criação da tag</h3><p>Um v minúsculo na frente e sempre três dígitos</p>
<p>Ex: v1.0.8, v2.0.0</p>
<h2 id="Remover_uma_tag">Remover uma tag</h2><p>Se você precisar remover uma tag, é bem simples:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag <span class="operator">-d</span> v1.<span class="number">1.2</span></span><br><span class="line">git push origin :refs/tags/v1.<span class="number">1.2</span></span><br></pre></td></tr></table></figure>
<h2 id="Um_abraço,_até_a_próxima">Um abraço, até a próxima</h2>]]></content:encoded>
      <comments>jullierme.github.io/Github-Compartilhe-seu-projeto/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[Livereload com Gruntjs - Aumentando a produtividade]]></title>
      <link>jullierme.github.io/Livereload-com-Gruntjs-Aumentando-a-produtividade/</link>
      <guid>jullierme.github.io/Livereload-com-Gruntjs-Aumentando-a-produtividade/</guid>
      <pubDate>Tue, 04 Aug 2015 03:00:00 GMT</pubDate>
      <description>
      <![CDATA[<h2 id="Como_isso_funciona?">Como isso funciona?</h2><p>A idéia é que a medida que você vai alterando seu código (js, html, css etc), essas alterações possam ser refletidas imediatamente no browser.</p>
<p>Nesse artigo vamos aprender a configurar o livereload no nosso ambiente utilizando gruntjs e o plugin watch.</p>
<h3 id="De_que_preciso?">De que preciso?</h3><p>Você precisa do <a href="http://gruntjs.com/">Gruntjs</a> configurado no seu projeto e de apenas um plugin. O <a href="https://github.com/gruntjs/grunt-contrib-watch">grunt-contrib-watch</a>.</p>
<h3 id="Instalação">Instalação</h3><p>Pelo prompt de comando, navegue até a raiz do seu projeto, onde se encontra o arquivo <b>Gruntfile.js</b><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install grunt-contrib-watch --save-dev</span><br></pre></td></tr></table></figure></p>]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="Como_isso_funciona?">Como isso funciona?</h2><p>A idéia é que a medida que você vai alterando seu código (js, html, css etc), essas alterações possam ser refletidas imediatamente no browser.</p>
<p>Nesse artigo vamos aprender a configurar o livereload no nosso ambiente utilizando gruntjs e o plugin watch.</p>
<h3 id="De_que_preciso?">De que preciso?</h3><p>Você precisa do <a href="http://gruntjs.com/" target="_blank" rel="external">Gruntjs</a> configurado no seu projeto e de apenas um plugin. O <a href="https://github.com/gruntjs/grunt-contrib-watch" target="_blank" rel="external">grunt-contrib-watch</a>.</p>
<h3 id="Instalação">Instalação</h3><p>Pelo prompt de comando, navegue até a raiz do seu projeto, onde se encontra o arquivo <b>Gruntfile.js</b><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install grunt-contrib-watch --save-dev</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>Esse é o plugin vai fazer o livereload funcionar :)</p>
<p>Aqui, eu utilizo outro plugin do grunt, indispensável por sinal. O <a href="https://github.com/sindresorhus/load-grunt-tasks" target="_blank" rel="external">load-grunt-tasks</a>. Ele simplesmente importa todos os plugins do grunt de uma vez. Para instalar, basta fazer:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install load-grunt-tasks --save-dev</span><br></pre></td></tr></table></figure>
<p>Configurando nosso arquivo Gruntfile.js</p>
<figure class="highlight javascript"><figcaption><span>[] Gruntfile.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">grunt</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//Carrega todos os plugins do Grunt declarados no arquivo package.json de uma vez</span></span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'load-grunt-tasks'</span>)(grunt);</span><br><span class="line"></span><br><span class="line">    grunt.initConfig(&#123;</span><br><span class="line">        watch: &#123;</span><br><span class="line">            options: &#123;</span><br><span class="line">                livereload: <span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            arquivos: &#123;</span><br><span class="line">                files: [<span class="string">'**/*.js'</span>, <span class="string">'**/*.html'</span>,<span class="string">'**/*.css'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//registra uma tarefa</span></span><br><span class="line">    grunt.registerTask( <span class="string">"livereload"</span>, [ <span class="string">"watch"</span> ]);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>Agora, basta você adicionar esse código no index do seu projeto</p>
<figure class="highlight html"><figcaption><span>[] index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"//localhost:35729/livereload.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Resumindo">Resumindo</h2><p>Na linha 8 temos a ativação do livereload. Na linha 11, temos a configuração da escuta, ou seja, toda vez que um arquivo .js, .html ou .css for alterado, será feito o recarregamento da página no browser.</p>
<h2 id="Vamos_aos_testes">Vamos aos testes</h2><p>Inicie o servidor de aplicação e depois digite o comando:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grunt livereload</span><br></pre></td></tr></table></figure>
<p>Lembrando que <b>livereload</b> é o nome da tarefa que registramos na linha 25</p>
<p>Abra sua aplicação pelo browser, altere algum arquivo e salve. Veja que a página foi recarregada com as novas alterações.</p>
<h2 id="Dica">Dica</h2><p>Eu divido a tela em duas. Do lado esquerdo deixo o webstorm e do lado direito o browser com a aplicação carregada. Dessa forma, vou fazendo a codificação do meu sistema e verificando imediatamente o visual da página. É bem melhor que um “mode design” de alguma ferramenta rad por exemplo.</p>
<h2 id="\o/">\o/</h2><p>É isso ai. Espero que te ajude como me ajudou :) Dúvidas? Deixe seu comentário.</p>
<p>Obrigado</p>
]]></content:encoded>
      <comments>jullierme.github.io/Livereload-com-Gruntjs-Aumentando-a-produtividade/#disqus_comments</comments>
    </item>
    
    <item>
      <title><![CDATA[Iniciando com bower]]></title>
      <link>jullierme.github.io/Iniciando-com-bower/</link>
      <guid>jullierme.github.io/Iniciando-com-bower/</guid>
      <pubDate>Mon, 27 Jul 2015 03:00:00 GMT</pubDate>
      <description>
      <![CDATA[<h2 id="Por_que_utilizar_o_bower?">Por que utilizar o bower?</h2><p>Sabe como funciona o MAVEN para gerenciamento de dependências Java? Pois bem, o bower é uma ferramenta de gerenciamento de dependências de projetos client-side, similar ao maven. Ele pode ser adicionado em qualquer projeto, independente do back-end ser Java, Node, etc.</p>
<p>Imagina que você tem um projeto html/javascript e precisa ficar fazendo download manual de todos os scripts/dependências que seu sistema utiliza. E o ciclo se repete a cada nova versão de uma dependência. Isso é trabalhoso e improdutivo.</p>
<p>Com o bower, você pode adicionar uma nova dependência configurando um único arquivo (bower.json) ou simplesmente digitar um comando no prompt do windows.</p>
<h2 id="Vamos_lá…">Vamos lá…</h2><p>Primeiro, certifique-se que em sua máquina esta instalado o <a href="https://nodejs.org/download/">Nodejs</a> e o <a href="https://git-scm.com/downloads">Git</a>.</p>
<p>Falaremos sobre o nodejs outro post, por hora, apenas precisamos instalá-lo, pois o bower roda “em cima” do nodejs.</p>
<h3 id="GO_GO_GO">GO GO GO</h3><p>Primeiramente, precisamos instalar o bower no nodejs, de forma que possa ser utilziado por qualquer projeto. Para isso abra o prompt de comando (modo administrador) e digite o seguinte comando:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g bower</span><br></pre></td></tr></table></figure>]]>
      
      </description>
      <content:encoded><![CDATA[<h2 id="Por_que_utilizar_o_bower?">Por que utilizar o bower?</h2><p>Sabe como funciona o MAVEN para gerenciamento de dependências Java? Pois bem, o bower é uma ferramenta de gerenciamento de dependências de projetos client-side, similar ao maven. Ele pode ser adicionado em qualquer projeto, independente do back-end ser Java, Node, etc.</p>
<p>Imagina que você tem um projeto html/javascript e precisa ficar fazendo download manual de todos os scripts/dependências que seu sistema utiliza. E o ciclo se repete a cada nova versão de uma dependência. Isso é trabalhoso e improdutivo.</p>
<p>Com o bower, você pode adicionar uma nova dependência configurando um único arquivo (bower.json) ou simplesmente digitar um comando no prompt do windows.</p>
<h2 id="Vamos_lá…">Vamos lá…</h2><p>Primeiro, certifique-se que em sua máquina esta instalado o <a href="https://nodejs.org/download/" target="_blank" rel="external">Nodejs</a> e o <a href="https://git-scm.com/downloads" target="_blank" rel="external">Git</a>.</p>
<p>Falaremos sobre o nodejs outro post, por hora, apenas precisamos instalá-lo, pois o bower roda “em cima” do nodejs.</p>
<h3 id="GO_GO_GO">GO GO GO</h3><p>Primeiramente, precisamos instalar o bower no nodejs, de forma que possa ser utilziado por qualquer projeto. Para isso abra o prompt de comando (modo administrador) e digite o seguinte comando:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g bower</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="Configurando_o_projeto">Configurando o projeto</h3><p>Pelo prompt, navegue até o diretório raiz do seu projeto. Para habilitar o bower, digite:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower init</span><br></pre></td></tr></table></figure>
<p>Algumas opções serão exibidas pra você configurar o arquivo principal do bower (bower.json). Porém, você pode fazer isso diretamente no arquivo mais tarde. Por hora, vá precionando enter até finalizar.</p>
<p>Ao final, seu arquivo <i>bower.json</i> será gerado na raiz do projeto.</p>
<h3 id="Instalando_sua_primeira_dependência">Instalando sua primeira dependência</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower install bootstrap --save</span><br></pre></td></tr></table></figure>
<p>O comando acima baixou (clone) todo o repositório do <a href="getbootstrap.com">bootstrap</a> que está no <a href="https://github.com/twbs/bootstrap" target="_blank" rel="external">github</a>. Uma nova pasta foi criada para salvar todas as dependências baixadas chamada <i>bower_components</i></p>
<p>A opção <i>—save</i> fez com que seu arquivo <i>bower.json</i> fosse configurado com essa dependência. </p>
<p>Agora é só apontar o script desejado na sua index.html</p>
<figure class="highlight html"><figcaption><span>[] index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"bower_components/bootstrap/dist/css/bootstrap.min.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"bower_components/bootstrap/dist/css/bootstrap-theme.min.css"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>Se você utiliza o git, svn ou cvs, não precisa fazer o commit da pasta <i>bower_components</i>. Sempre que quiser execute o comando abaixo para baixar todas as dependências já configuradas no seu arquivo bower.json</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower update</span><br></pre></td></tr></table></figure>
<p>É isso ai! Não deixe de perguntar se tiver alguma dúvida. </p>
<p>Obrigado, até o próximo post.</p>
]]></content:encoded>
      <comments>jullierme.github.io/Iniciando-com-bower/#disqus_comments</comments>
    </item>
    
  </channel>
</rss>