<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Jullierme Barros]]></title>
  <subtitle><![CDATA[Simples assim!]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="jullierme.github.io//"/>
  <updated>2015-08-05T02:11:35.234Z</updated>
  <id>jullierme.github.io//</id>
  
  <author>
    <name><![CDATA[Jullierme Barros]]></name>
    <email><![CDATA[julliermebarros@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Livereload com Gruntjs - Aumentando a produtiviade]]></title>
    <link href="jullierme.github.io/Livereload-com-Gruntjs-Aumentando-a-produtiviade/"/>
    <id>jullierme.github.io/Livereload-com-Gruntjs-Aumentando-a-produtiviade/</id>
    <published>2015-08-04T03:00:00.000Z</published>
    <updated>2015-08-05T02:11:35.234Z</updated>
    <content type="html"><![CDATA[<h2 id="Como_funciona_isso?">Como funciona isso?</h2><p>A idéia é que a medida que você vai alterando seu código (js, html, css etc), essas alterações possam ser refletidas imediatamente no browser.</p>
<h3 id="De_que_preciso?">De que preciso?</h3><p>Você precisa do <a href="http://gruntjs.com/" target="_blank" rel="external">Gruntjs</a> configurado no seu projeto e de apenas um plugin. O <a href="https://github.com/gruntjs/grunt-contrib-watch" target="_blank" rel="external">grunt-contrib-watch</a>.</p>
<h3 id="Instalação_dos_plugins">Instalação dos plugins</h3><p>Pelo prompt de comando, navegue até a raiz do seu projeto, onde se encontra o arquivo <b>Gruntfile.js</b><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install grunt-contrib-watch --save-dev</span><br></pre></td></tr></table></figure></p>
<p>Esse é o plugin vai fazer o livereload funcionar :)</p>
<p>Aqui, eu utilizo outro plugin do grunt, indispensável por sinal. O <a href="https://www.npmjs.com/package/matchdep" target="_blank" rel="external">matchdep</a>. Ele simplesmente importa todos os plugins do grunt de uma vez. Para instalar, basta fazer:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install matchdep --save-dev</span><br></pre></td></tr></table></figure>
<p>Configurando nosso arquivo Gruntfile.js<br><a id="more"></a><br><figure class="highlight javascript"><figcaption><span>[] Gruntfile.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">grunt</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//Carrega todos os plugins do Grunt declarados no arquivo package.json de uma vez</span></span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'matchdep'</span>).filterDev(<span class="string">'grunt-*'</span>).forEach(grunt.loadNpmTasks);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Configura o Grunt</span></span><br><span class="line">    grunt.initConfig(&#123;</span><br><span class="line">        <span class="comment">// Tarefa watch</span></span><br><span class="line">        watch: &#123;</span><br><span class="line">            options: &#123;</span><br><span class="line">                livereload: <span class="literal">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">            js: &#123;</span><br><span class="line">                files: [<span class="string">'**/*.js'</span>],</span><br><span class="line">            &#125;,</span><br><span class="line">            html: &#123;</span><br><span class="line">                files: [<span class="string">'**/*.html'</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            css: &#123;</span><br><span class="line">                files: [<span class="string">'**/*.css'</span>],</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//registra uma tarefa</span></span><br><span class="line">    grunt.registerTask( <span class="string">"livereload"</span>, [ <span class="string">"watch"</span> ]);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>Agora, basta você adicionar esse código no index do seu projeto</p>
<figure class="highlight html"><figcaption><span>[] index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"//localhost:35729/livereload.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Resumindo">Resumindo</h2><p>Da linha 9 a 11, temos a ativação do livereload. Da linha 12 a 20, temos a configuração da escuta, ou seja, toda vez que um arquivo .js, .html ou .css for alterado, será feito o recarregamento da página no browser.</p>
<h2 id="Vamos_aos_testes">Vamos aos testes</h2><p>Inicie o servidor de aplicação e depois digite o comando:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grunt livereload</span><br></pre></td></tr></table></figure>
<p>Lembrando que <b>livereload</b> é o nome da tarefa que registramos na linha 25</p>
<p>Abra sua aplicação pelo browser, altere algum arquivo e salve. Veja que a página foi recarregada com as novas alterações.</p>
<h2 id="Dica">Dica</h2><p>Eu divido a tela em duas. Do lado esquerdo deixo o webstorm e do lado direito o browser com a aplicação carregada. Dessa forma, vou fazendo a codificação do meu sistema e verificando imediatamente o visual da página. É bem melhor que um “mode design” de alguma ferramenta rad por exemplo.</p>
<h2 id="\o/">\o/</h2><p>É isso ai. Espero que te ajude como me ajudou :) Dúvidas? Deixe seu comentário.</p>
<p>Obrigado</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Como_funciona_isso?">Como funciona isso?</h2><p>A idéia é que a medida que você vai alterando seu código (js, html, css etc), essas alterações possam ser refletidas imediatamente no browser.</p>
<h3 id="De_que_preciso?">De que preciso?</h3><p>Você precisa do <a href="http://gruntjs.com/">Gruntjs</a> configurado no seu projeto e de apenas um plugin. O <a href="https://github.com/gruntjs/grunt-contrib-watch">grunt-contrib-watch</a>.</p>
<h3 id="Instalação_dos_plugins">Instalação dos plugins</h3><p>Pelo prompt de comando, navegue até a raiz do seu projeto, onde se encontra o arquivo <b>Gruntfile.js</b><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install grunt-contrib-watch --save-dev</span><br></pre></td></tr></table></figure></p>
<p>Esse é o plugin vai fazer o livereload funcionar :)</p>
<p>Aqui, eu utilizo outro plugin do grunt, indispensável por sinal. O <a href="https://www.npmjs.com/package/matchdep">matchdep</a>. Ele simplesmente importa todos os plugins do grunt de uma vez. Para instalar, basta fazer:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install matchdep --save-dev</span><br></pre></td></tr></table></figure>
<p>Configurando nosso arquivo Gruntfile.js<br>]]>
    
    </summary>
    
      <category term="angularjs" scheme="jullierme.github.io/tags/angularjs/"/>
    
      <category term="gruntjs" scheme="jullierme.github.io/tags/gruntjs/"/>
    
      <category term="livereload" scheme="jullierme.github.io/tags/livereload/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Iniciando com bower]]></title>
    <link href="jullierme.github.io/Iniciando-com-bower/"/>
    <id>jullierme.github.io/Iniciando-com-bower/</id>
    <published>2015-07-27T03:00:00.000Z</published>
    <updated>2015-08-05T01:29:28.127Z</updated>
    <content type="html"><![CDATA[<h2 id="Por_que_utilizar_o_bower?">Por que utilizar o bower?</h2><p>Sabe como funciona o MAVEN para gerenciamento de dependências Java? Pois bem, o bower é uma ferramenta de gerenciamento de dependências de projetos client-side, similar ao maven. Ele pode ser adicionado em qualquer projeto, independente do back-end ser Java, Node, etc.</p>
<p>Imagina que você tem um projeto html/javascript e precisa ficar fazendo download manual de todos os scripts/dependências que seu sistema utiliza. E o ciclo se repete a cada nova versão de uma dependência. Isso é trabalhoso e improdutivo.</p>
<p>Com o bower, você pode adicionar uma nova dependência configurando um único arquivo (bower.json) ou simplesmente digitar um comando no prompt do windows.</p>
<a id="more"></a>
<h2 id="Vamos_lá…">Vamos lá…</h2><p>Primeiro, certifique-se que em sua máquina esta instalado o <a href="https://nodejs.org/download/" target="_blank" rel="external">Nodejs</a>.</p>
<p>Falaremos sobre o nodejs outro post, por hora, apenas precisamos instalá-lo, pois o bower roda “em cima” do nodejs.</p>
<h3 id="GO_GO_GO">GO GO GO</h3><p>Primeiramente, precisamos instalar o bower no nodejs, de forma que possa ser utilziado por qualquer projeto. Para isso abra o prompt de comando (modo administrador) e digite o seguinte comando:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g bower</span><br></pre></td></tr></table></figure>
<h3 id="Configurando_o_projeto">Configurando o projeto</h3><p>Pelo prompt, navegue até o diretório raiz do seu projeto. Para habilitar o bower, digite:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower init</span><br></pre></td></tr></table></figure>
<p>Algumas opções serão exibidas pra você configurar o arquivo principal do bower (bower.json). Porém, você pode fazer isso diretamente no arquivo mais tarde. Por hora, vá precionando enter até finalizar.</p>
<p>Ao final, seu arquivo <i>bower.json</i> será gerado na raiz do projeto.</p>
<h3 id="Instalando_sua_primeira_dependência">Instalando sua primeira dependência</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower install bootstrap --save</span><br></pre></td></tr></table></figure>
<p>O comando acima baixou (clone) todo o repositório do <a href="getbootstrap.com">bootstrap</a> que está no <a href="https://github.com/twbs/bootstrap" target="_blank" rel="external">github</a>. Uma nova pasta foi criada para salvar todas as dependências baixadas chamada <i>bower_components</i></p>
<p>A opção <i>—save</i> fez com que seu arquivo <i>bower.json</i> fosse configurado com essa dependência. </p>
<p>Agora é só apontar o script desejado na sua index.html</p>
<figure class="highlight html"><figcaption><span>[] index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"bower_components/bootstrap/dist/css/bootstrap.min.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"bower_components/bootstrap/dist/css/bootstrap-theme.min.css"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>Se você utiliza o git, svn ou cvs, não precisa fazer o commit da pasta <i>bower_components</i>. Sempre que quiser execute o comando abaixo para baixar todas as dependências já configuradas no seu arquivo bower.json</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bower update</span><br></pre></td></tr></table></figure>
<p>É isso ai! Não deixe de perguntar se tiver alguma dúvida. </p>
<p>Obrigado, até o próximo post.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Por_que_utilizar_o_bower?">Por que utilizar o bower?</h2><p>Sabe como funciona o MAVEN para gerenciamento de dependências Java? Pois bem, o bower é uma ferramenta de gerenciamento de dependências de projetos client-side, similar ao maven. Ele pode ser adicionado em qualquer projeto, independente do back-end ser Java, Node, etc.</p>
<p>Imagina que você tem um projeto html/javascript e precisa ficar fazendo download manual de todos os scripts/dependências que seu sistema utiliza. E o ciclo se repete a cada nova versão de uma dependência. Isso é trabalhoso e improdutivo.</p>
<p>Com o bower, você pode adicionar uma nova dependência configurando um único arquivo (bower.json) ou simplesmente digitar um comando no prompt do windows.</p>]]>
    
    </summary>
    
      <category term="bower" scheme="jullierme.github.io/tags/bower/"/>
    
  </entry>
  
</feed>